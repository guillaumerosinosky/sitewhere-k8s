apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ template "wrap10.fullname" . }}"
  labels:
    app: {{ include "wrap10.name" . }}
    chart: {{ include "wrap10.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "wrap10.fullname" . }}-headless
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ default 1 .Values.brokers }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "wrap10.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ template "wrap10.name" . }}
                  - key: "release"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
      - name: {{ template "wrap10.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - name: api
          containerPort: {{ .Values.config.http.bind_address }}
        {{- if .Values.config.studio.enabled }}
        - name: studio
          containerPort: {{ .Values.config.studio.bind_address }}
        {{- end }}
        {{- if .Values.env }}
        env:
{{ toYaml .Values.env | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: datadir-0
          mountPath: {{ .Values.config.storage_directory }}
      volumes:
      {{- if not .Values.persistence.enabled }}
      - name: datadir-0
        emptyDir: {}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  {{- $disksPerBroker := .Values.persistence.disksPerBroker | int }}
  {{- $root := . }}
  {{- range $k, $e := until $disksPerBroker }}
  - metadata:
      name: datadir-{{$k}}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "{{ $root.Values.persistence.size }}"
      {{- if $root.Values.persistence.storageClass }}
      {{- if (eq "-" $root.Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ $root.Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- end }}
{{- end }}