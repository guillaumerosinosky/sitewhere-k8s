{{- if and .Values.tags.infrastructure .Values.strimzi.enabled -}}
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: sitewhere-kafka
  labels:
    app: sitewhere
    chart: {{ .Chart.Name | quote }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  kafka:
    version: 3.0.0
    replicas: {{ .Values.strimzi.replicas }}
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
    config:
      offsets.topic.replication.factor: {{ .Values.strimzi.replicas }}
      transaction.state.log.replication.factor: {{ .Values.strimzi.replicas }}
      transaction.state.log.min.isr: {{ .Values.strimzi.isr }}
      log.retention.hours: {{ .Values.strimzi.log.retention.hours }}
      log.segment.bytes: {{ .Values.strimzi.log.segment.bytes }}
      log.retention.check.interval.ms: {{ .Values.strimzi.log.retention.check.interval.ms }}
      log.message.format.version: "2.7"
      inter.broker.protocol.version: "2.7"
    storage:
      type: {{ .Values.strimzi.storage.type | quote }}
      {{- if (eq .Values.strimzi.storage.type "persistent-claim") }}
      size: {{ .Values.strimzi.storage.size }}
      deleteClaim: true
      {{- if .Values.strimzi.storage.storageClass }}
      class: {{ .Values.strimzi.storage.storageClass }}
      {{- end }}
      {{- end }}
  zookeeper:
    replicas: {{ .Values.strimzi.replicas }}
    storage:
      type: {{ .Values.strimzi.storage.type | quote }}
      {{- if (eq .Values.strimzi.storage.type "persistent-claim") }}
      size: {{ .Values.strimzi.storage.size }}
      deleteClaim: true
      {{- if .Values.strimzi.storage.storageClass }}
      class: {{ .Values.strimzi.storage.storageClass }}
      {{- end }}
      {{- end }}
  entityOperator:
    topicOperator: {}
    userOperator: {}
{{- end }}
