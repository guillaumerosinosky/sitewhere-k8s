# PostgreSQL
postgresql:
  fullnameOverride: sitewhere-postgresql
  enabled: true
  persistence:
    storageClass: rook-ceph-block
    enabled: true
    size: 1Gi
  postgresqlUsername: syncope
  postgresqlDatabase: syncope
  existingSecret: syncope
  service:
    type: LoadBalancer
    port: 5432
  master:
    podAnnotations: 
      sidecar.istio.io/inject: "false"
      
# Mosquitto
mosquitto:
  persistence:
    storageClass: rook-ceph-block

# Redis HA
redis-ha:
  replicas: 3
  hardAntiAffinity: false
  persistentVolume:
    enabled: true
    storageClass: rook-ceph-block
  
# Syncope
syncope:
  syncopeEnvironment:
    dbUser: syncope
    dbUrl: jdbc:postgresql://sitewhere-postgres:5432/syncope
    dbPoolMax: 10
    dbPoolMin: 2
    coreScheme: http # valid values are http and https
    coreHost: syncope # Host that syncope will use to connect to core.  Needs to match .Values.syncopeConfig.name
    corePort: 8080
    userCreds: <YOURPASSWORD> # Needs to match the databaseEnvironment.pgPassword that was provided to the database
  ### Config Params for the syncope container (A.K.A. Core)
  syncopeConfig:
    name: syncope
    replicas: 1
    repository: apache
    container: syncope
    tag: 2.1.4
    containerPort: 8080
    memoryLimit: 512Mi
    serviceType: ClusterIP
  ### Config Params for the syncope-console containers
  syncopeConsoleConfig:
    name: syncope-console
    replicas: 1
    repository: apache
    container: syncope-console
    tag: 2.1.4
    containerPort: 8080
    memoryLimit: 512Mi
    serviceType: ClusterIP
  ### Config Params for the syncope-enduser containers
  syncopeEndUserConfig:
    name: syncope-enduser
    replicas: 1
    repository: apache
    container: syncope-enduser
    tag: 2.1.4
    containerPort: 8080
    memoryLimit: 512Mi
    serviceType: ClusterIP

# Prometheus
prometheus:
  enabled: true
  alertmanager:
    podAnnotations:
      sidecar.istio.io/inject: "false"
  kubeStateMetrics:
    podAnnotations:
      sidecar.istio.io/inject: "false"
  nodeExporter:
    podAnnotations:
      sidecar.istio.io/inject: "false"
  server:
    podAnnotations:
      sidecar.istio.io/inject: "false"
  pushgateway:
    podAnnotations:
      sidecar.istio.io/inject: "false"
